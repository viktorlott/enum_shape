name: "Release"

permissions:
  contents: "write"

on:
  workflow_dispatch:
  # workflow_run:
  #   workflows: ["Tag"]
  #   types:
  #     - "completed"

jobs:
  changelog:
    name: Generate changelog
    runs-on: ubuntu-latest
    outputs:
      release_body: ${{ steps.git-cliff.outputs.content }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Generate a changelog
        uses: orhun/git-cliff-action@v2
        id: git-cliff
        with:
          config: cliff.toml
          args: -vv --latest --strip header
        env:
          OUTPUT: CHANGES.md

      # use release body in the same job
      - name: Upload the binary releases
        uses: svenstaro/upload-release-action@v2
        with:
          file: binary_release.zip
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          body: ${{ steps.git-cliff.outputs.content }}

  # create-release:
  #   name: "Create release"
  #   if: ${{ github.event.workflow_run.conclusion == 'success' }}
  #   needs: "get-tag"
  #   runs-on: "ubuntu-latest"
  #   steps:
  #     - name: "Check out the repo"
  #       uses: actions/checkout@v3
      
  #     - name: "Create release"
  #       uses: "taiki-e/create-gh-release-action@v1"
  #       with:
  #         branch: "main"
  #         ref: refs/tags/v${{ needs.get-tag.outputs.pkg-version }}
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #         title: $version

  # upload-assets:
  #   name: "Upload assets to Github releases"
  #   if: ${{ github.event.workflow_run.conclusion == 'success' }}
  #   needs: 
  #    - "get-tag"
  #    - "create-release"
  #   strategy:
  #     matrix:
  #       include:
  #         - target: "x86_64-unknown-linux-gnu"
  #           os: "ubuntu-latest"
  #         - target: "x86_64-unknown-linux-musl"
  #           os: "ubuntu-latest"
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     - name: "Check out the repo"
  #       uses: actions/checkout@v3

  #     - name: "Upload Binaries"
  #       uses: "taiki-e/upload-rust-binary-action@v1"
  #       with:
  #         bin: "shazam"
  #         target: ${{ matrix.target }}
  #         archive: $bin-${{ matrix.target }}
  #         ref: refs/tags/v${{ needs.get-tag.outputs.pkg-version }}
  #         token: ${{ secrets.GITHUB_TOKEN }}

  # push-to-registry:
  #   name: "Push Docker image to Docker Hub"
  #   if: ${{ github.event.workflow_run.conclusion == 'success' }}
  #   needs:
  #     - "get-tag"
  #     - "upload-assets"
  #   runs-on: "ubuntu-latest"
  #   steps:
  #     - name: "Check out the repo"
  #       uses: actions/checkout@v3

  #     - name: "Log in to Docker Hub"
  #       uses: "docker/login-action@v2"
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}
      
  #     - name: "Extract metadata (tags, labels) for Docker"
  #       id: "meta"
  #       uses: "docker/metadata-action@v4"
  #       with:
  #         images: "bwks/shazam"
      
  #     - name: "Build and push Docker image"
  #       uses: "docker/build-push-action@v3"
  #       with:
  #         context: .
  #         push: true
  #         tags: bwks/shazam:latest,bwks/shazam:v${{ needs.get-tag.outputs.pkg-version }}
  #         labels: ${{ steps.meta.outputs.labels }}